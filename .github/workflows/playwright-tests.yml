name: Java Playwright TestNG CI

on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    environment: default

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Optional: cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Run tests
        env:
          LOGIN_STANDARD_USER: ${{ secrets.LOGIN_STANDARD_USER }}
          LOGIN_LOCKED_OUT_USER: ${{ secrets.LOGIN_LOCKED_OUT_USER }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: mvn test

      - name: Generate Allure report
        run: mvn -q allure:report

      # OPTIONAL: sanity check the folder exists
      - name: Verify Allure output
        run: |
          ls -la target/site/allure-maven-plugin || (echo "Allure output missing" && exit 1)

      # THIS is the required uploader for GitHub Pages
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Do not change artifact name unless you also change it in deploy step
          path: target/site/allure-maven-plugin
          # artifact_name: github-pages   # default; you can omit

  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # If you changed artifact_name above, pass it here:
        # with:
        #   artifact_name: my-pages-artifact

      - name: Add Pages URL to summary
        run: |
          echo "### âœ… Allure report is live" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
